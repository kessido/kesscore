# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/01_images.ipynb (unless otherwise specified).

__all__ = ['show_titled_images', 'show_image', 'show_images', 'show_titled_image']

# Cell
from .imports import *
from .functional import *
from functools import wraps

# Cell
def _is_path(im):          return isinstance(im, (str, Path))
def _load_path(im):        return load_image(im)       if _is_path(im) else im
def _tuplefy_load_path(im):return (load_image(im), im) if _is_path(im) else im

def _load_paths(im):         return L(im).map(_load_path)
def _tuplefy_load_paths(im):return L(im).map(_tuplefy_load_path)

def _a2f(f, g):
    'apply `g` to first arguments of `f`'
    @wraps(f)
    def _inner(x, *args, **kwargs): return f(g(x),*args,**kwargs)
    return _inner

show_image        = _a2f(show_image,        _load_path)
show_images       = _a2f(show_images,       _load_paths)
show_titled_image = _a2f(show_titled_image, _tuplefy_load_path)
@delegates(show_images)
def show_titled_images(ims, **kwargs):
    if 'titles' not in kwargs and L(ims).map(_is_path).all():
        ims=_tuplefy_load_paths(ims)
        ims,kwargs['titles']=zip(*ims)
    return show_images(ims,**kwargs)
# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/00_functional.ipynb (unless otherwise specified).

__all__ = ['lmap', 'lzip', 'lfilter', 'isinstance']

# Cell
from .imports import *
from functools import wraps

# Cell
def _listify(f=None):
    if f==None: return lisitify_decorator
    @wraps(f)
    def _inner(*args, **kwargs): return list(f(*args, **kwargs))
    return _inner

# Cell
lmap = _listify(map)
lzip = _listify(zip)
lfilter = _listify(filter)

# Cell
def _all(self:L)->bool:return all(self)
L.all = _all

# Cell
_isinstance = isinstance
@delegates(_isinstance)
def isinstance(obj, class_or_tuple=None, **kwargs):
    if class_or_tuple is None:
        class_or_tuple=obj
        @wraps(isinstance)
        def _inner(obj): return isinstance(obj, class_or_tuple)
        return _inner
    return _isinstance(obj,class_or_tuple)